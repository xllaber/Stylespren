@each $breakpoint, $size in $break-points {
  @media (min-width: #{$size}) {
    .#{$breakpoint}\:flex {
      display: flex;

      //justify
      &--justify-content-start {
        justify-content: flex-start;
      }
      &--justify-content-center {
        justify-content: center;
      }
      &--justify-content-between {
        justify-content: space-between;
      }
      &--justify-content-around {
        justify-content: space-around;
      }
      &--justify-content-evenly {
        justify-content: space-evenly;
      }
      &--justify-content-end {
        justify-content: flex-end;
      }
      &--justify-content-left {
        justify-content: left;
      }
      &--justify-content-right {
        justify-content: right;
      }

      //justify-self
      &__justify-self-stretch {
        justify-self: stretch;
      }
      &__justify-self-center {
        justify-self: center;
      }
      &__justify-self-start {
        justify-self: start;
      }
      &__justify-self-end {
        justify-self: end;
      }

      //align-items
      &--align-items-start {
        align-items: flex-start;
      }
      &--align-items-center {
        align-items: center;
      }
      &--align-items-baseline {
        align-items: baseline;
      }
      &--align-items-stretch {
        align-items: stretch;
      }
      &--align-items-end {
        align-items: flex-end;
      }

      //align-content
      &--align-content-flex-start {
        align-content: flex-start;
      }
      &--align-content-start {
        align-content: start;
      }
      &--align-content-center {
        align-content: center;
      }
      &--align-content-between {
        align-content: space-between;
      }
      &--align-content-around {
        align-content: space-around;
      }
      &--align-content-evenly {
        align-content: space-evenly;
      }
      &--align-content-baseline {
        align-content: baseline;
      }
      &--align-content-stretch {
        align-content: stretch;
      }
      &--align-content-flex-end {
        align-content: flex-end;
      }
      &--align-content-end {
        align-content: end;
      }

      //align-self
      &__align-self-start {
        align-self: flex-start;
      }
      &__align-self-center {
        align-self: center;
      }
      &__align-self-baseline {
        align-self: baseline;
      }
      &__align-self-stretch {
        align-self: stretch;
      }
      &__align-self-end {
        align-self: flex-end;
      }

      //direction
      &--col {
        flex-direction: column;
      }
      &--col-reverse {
        flex-direction: column-reverse;
      }
      &--row {
        flex-direction: row;
      }
      &--row-reverse {
        flex-direction: row-reverse;
      }
      &--wrap {
        flex-wrap: wrap;
      }
      &--wrap-revese {
        flex-wrap: wrap-reverse;
      }
      &--no-wrap {
        flex-wrap: nowrap;
      }

      //flow
      &--flow-col-wrap {
        flex-flow: column wrap;
      }
      &--flow-col-nowrap {
        flex-flow: column nowrap;
      }
      &--flow-row-wrap {
        flex-flow: row wrap;
      }
      &--flow-row-nowrap {
        flex-flow: row nowrap;
      }

      //flex
      &__1 {
        flex: 1 1 0;
      }
      &__auto {
        flex: 1 1 auto;
      }
      &__initial {
        flex: 0 1 auto;
      }
      &__none {
        flex: none;
      }

    }

    @for $i from 1 through length($gap){
      .#{$breakpoint}\:gap-#{$i}{
        gap: nth($gap, $i);
      }
      .#{$breakpoint}\:row-gap-#{$i}{
        row-gap: nth($gap, $i);
      }
      .#{$breakpoint}\:col-gap-#{$i}{
        column-gap: nth($gap, $i);
      }
    }
  }
}

.flex {
  display: flex;

  //justify
  &--justify-content-start {
    justify-content: flex-start;
  }
  &--justify-content-center {
    justify-content: center;
  }
  &--justify-content-between {
    justify-content: space-between;
  }
  &--justify-content-around {
    justify-content: space-around;
  }
  &--justify-content-evenly {
    justify-content: space-evenly;
  }
  &--justify-content-end {
    justify-content: flex-end;
  }
  &--justify-content-left {
    justify-content: left;
  }
  &--justify-content-right {
    justify-content: right;
  }

  //justify-self
  &__justify-self-stretch {
    justify-self: stretch;
  }
  &__justify-self-center {
    justify-self: center;
  }
  &__justify-self-start {
    justify-self: start;
  }
  &__justify-self-end {
    justify-self: end;
  }

  //align-items
  &--align-items-start {
    align-items: flex-start;
  }
  &--align-items-center {
    align-items: center;
  }
  &--align-items-baseline {
    align-items: baseline;
  }
  &--align-items-stretch {
    align-items: stretch;
  }
  &--align-items-end {
    align-items: flex-end;
  }

  //align-content
  &--align-content-flex-start {
    align-content: flex-start;
  }
  &--align-content-start {
    align-content: start;
  }
  &--align-content-center {
    align-content: center;
  }
  &--align-content-between {
    align-content: space-between;
  }
  &--align-content-around {
    align-content: space-around;
  }
  &--align-content-evenly {
    align-content: space-evenly;
  }
  &--align-content-baseline {
    align-content: baseline;
  }
  &--align-content-stretch {
    align-content: stretch;
  }
  &--align-content-flex-end {
    align-content: flex-end;
  }
  &--align-content-end {
    align-content: end;
  }

  //align-self
  &__align-self-start {
    align-self: flex-start;
  }
  &__align-self-center {
    align-self: center;
  }
  &__align-self-baseline {
    align-self: baseline;
  }
  &__align-self-stretch {
    align-self: stretch;
  }
  &__align-self-end {
    align-self: flex-end;
  }

  //direction
  &--col {
    flex-direction: column;
  }
  &--col-reverse {
    flex-direction: column-reverse;
  }
  &--row {
    flex-direction: row;
  }
  &--row-reverse {
    flex-direction: row-reverse;
  }
  &--wrap {
    flex-wrap: wrap;
  }
  &--wrap-revese {
    flex-wrap: wrap-reverse;
  }
  &--no-wrap {
    flex-wrap: nowrap;
  }

  //flow
  &--flow-col-wrap {
    flex-flow: column wrap;
  }
  &--flow-col-nowrap {
    flex-flow: column nowrap;
  }
  &--flow-row-wrap {
    flex-flow: row wrap;
  }
  &--flow-row-nowrap {
    flex-flow: row nowrap;
  }

  //flex
  &__1 {
    flex: 1 1 0;
  }
  &__auto {
    flex: 1 1 auto;
  }
  &__initial {
    flex: 0 1 auto;
  }
  &__none {
    flex: none;
  }

}

@for $i from 1 through length($gap){
  .gap-#{$i}{
    gap: nth($gap, $i);
  }
  .row-gap-#{$i}{
    row-gap: nth($gap, $i);
  }
  .col-gap-#{$i}{
    column-gap: nth($gap, $i);
  }
}
