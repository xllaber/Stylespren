.border {
  border: 1px solid black;

  @for $i from 1 through length($radius) {
    &--rounded-#{$i} {
      border-radius: nth($radius, $i);
    }
  }

  @for $i from 1 through length($radius) {
    &--rounded-top-#{$i} {
      border-top-left-radius: nth($radius, $i);
      border-top-right-radius: nth($radius, $i);
    };
  }

  @for $i from 1 through length($radius) {
    &--rounded-bottom-#{$i} {
      border-bottom-left-radius: nth($radius, $i);
      border-bottom-right-radius: nth($radius, $i);
    };
  }

  @each $color, $tones in $colors {
    @for $i from 1 through length($tones) {
      &--color-#{$color}-#{$i} {
        border-color:var(--#{$color}-#{$i});
      }
    }
  }
}

@each $breakpoint, $size in $break-points {
  @media (min-width: #{$size}) {
    @for $i from 1 through length($radius) {
      .#{$breakpoint}\:border--rounded-#{$i} {
        border-radius: nth($radius, $i);
      }
    }
  }
}

@each $breakpoint, $size in $break-points {
  @media (min-width: #{$size}) {
    @for $i from 1 through length($radius) {
      .#{$breakpoint}\:border--rounded-top-#{$i} {
        border-top-left-radius: nth($radius, $i);
        border-top-right-radius: nth($radius, $i);
      }
    }
  }
}

@each $breakpoint, $size in $break-points {
  @media (min-width: #{$size}) {
    @for $i from 1 through length($radius) {
      .#{$breakpoint}\:border--rounded-bottom-#{$i} {
        border-bottom-left-radius: nth($radius, $i);
        border-bottom-right-radius: nth($radius, $i);
      }
    }
  }
}
